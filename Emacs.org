#+title: Emacs initialization
#+OPTIONS: author:nil date:nil

* Package management

#+begin_src emacs-lisp

  (require 'package)
  (setq package-archives '(
			   ("melpa" . "https://melpa.org/packages/")
			   ;; ("melpa-stable" . "https://stable.melpa.org/packages/")
			   ;; ("org" . "https://orgmode.org/elpa/")
			   ("elpa" . "https://elpa.gnu.org/packages/")
			   ))
  (package-initialize)

  (message "successfully setup package managers")

#+end_src

* use-package

#+begin_src emacs-lisp

  (unless (package-installed-p 'use-package)
    (package-refresh-contents)
    (package-install 'use-package))
  (eval-when-compile
    (require 'use-package))

  (message "successfully setup use-package")
#+end_src

- [[https://emacs.stackexchange.com/a/50603/30155][use-package won't load]]

* Magit

https://magit.vc/manual/magit/

#+begin_src emacs-lisp

  (use-package magit
    :ensure t)

  ;; Custom functions for opening GitHub from magit
  (defun parse-github-url (url)
    "convert a git remote location as a HTTP URL"
    (if (string-match "^http" url)
	url
      (replace-regexp-in-string "\\(.*\\)@\\(.*\\):\\(.*\\)\\(\\.git?\\)"
				"https://\\2/\\3"
				url)))

  (defun magit-open-repo ()
    "open remote repo URL"
    (interactive)
    (let ((url (magit-get "remote" "origin" "url")))
      (progn
	(browse-url (parse-github-url url))
	(message "Opening %s" url))))

  (add-hook 'magit-mode-hook
	    (lambda ()
	      (local-set-key (kbd "o") 'magit-open-repo)))

  (message "successfully setup magit")

#+end_src

* Org

** Constants

#+begin_src emacs-lisp

  (setq
 
   ;; default location to look for Org files
   org-directory "~/Dropbox/org"

   ;; font-lock should hide the emphasis marker characters
   org-hide-emphasis-markers t

   ;; turn on org-indent-mode on startup.
   org-startup-indented t

   ;; insert state change notes and time stamps into a drawer
   org-log-into-drawer t

   ;; information to record when a task moves to the DONE state.
   org-log-done t
 
   )

#+end_src

#+end_src

** Finished Org

#+begin_src emacs-lisp

  (message "successfully setup Org")

#+end_src
* Completed Emacs.org setup

#+begin_src emacs-lisp
  (message "finished Emacs.org setup")
#+end_src

* Local variables

View this file as a text file.

# Local variables:
# eval: (add-hook 'after-save-hook 'org-html-export-to-html t t)
# end:

